---
clusterName: "cluster.local"

autoscaler: true

# By default, this is points at the docker hub artifacts
registry:
  opthub: "azul"
  dockerhubMirror: ""

imagePullPolicy: "IfNotPresent"

simpleSizing:
  # Total number of vCores that will be allocated to the CNC service.
  # The sizing formula in the templates will allocate individual
  # CNC infrastructure components to best utilize given resources.
  # The default number is the amount of vCores necessary to start
  # one replica of each CNC component, so that the service is operational.
  vCores: 32
  # minVCores and maxVCores has the same formula as vCores, but applied
  # when autoscaling is enabled.
  minVCores: 32
  # Default max is to allocate 10 compile brokers.
  maxVCores: 106


  # Do not change these values unless you change the required CNC pod sizing.
  relationships:
    brokersPerGateway: 4
    brokersPerCache: 100

# Secrets used by helm chart. Secrets are created by helm chart when default config is used.
#
# It is possible to provide name of existing secret. This secret needs to be in same namespace as the namespace
# used by Helm. This secret will then be used instead of creating new one.

secrets:
  blobStorage:
    s3:
      # name of existing Secret object to use. New Secret is created if name is empty
      existingSecret: ""

      # name of *key* for `accessKey` value in K8S Secret. It can be renamed to match names in existing Secret
      accessKeySecretKey: blob-storage-accesskey
      # default value for accesskey - used when new secret is created
      accesskey: <yourAccessKey>

      # name of *key* for `secretkey` value in K8S Secret. It can be renamed to match names in existing Secret
      secretAccessKeySecretKey: blob-storage-secretkey
      # default value for db.secretkey - used when new secret is created
      secretkey: <yourSecretKey>
    azure:
      # name of existing Secret object to use. New Secret is created if name is empty
      existingSecret: ""

      # name of *key* for `connectionStringSecretKey` value in K8S Secret. It can be renamed to match names in existing Secret
      connectionStringSecretKey: azure-storage-connection-string
      # connectionString: "<connection-string>" . For authMethod: connection-string,
      # get connection-string on Azure Portal > Storage accounts > {storage_account_name} > Access keys

      # name of *key* for `sasTokenSecretKey` in K8S Secret. It can be renamed to match names in existing Secret
      sasTokenSecretKey: azure-storage-sas-token
      # sasToken: "<sas-token>"  # For authMethod: sas-token,
      # Get sas-token on Azure Portal > Storage accounts > {storage_account_name} > {blob_container} > Shared access tokens

deployment:
  serviceAccount:
    labels: {}
    annotations: {}
    existingServiceAccount: ""


ssl:
  enabled: false
  value:
    cert: ""
    key: ""
  path:
    cert: "cert.pem"
    key: "key.pem"
  existingSecret: ""
  mtls:
    enabled: false
    truststore: "client-truststore.p12"
    password: "pass"

compilations:
  minVmVersionForCNCCompilation: ""
  concurrencyBoost: ""
  parallelism:
    # Maximum concurrent compilation limit per VM (VMs will not send more than this amount at the same time).
    limitPerVm: 500
    # Maximum amount of parallel compiler engine processes running at the same time per compile broker.
    limitPerCompileBroker: 30
    lookupParallelism: 120 # calculated as limitPerCompileBroker * 4

readyNowOrchestrator:
  debugInfoHistoryLength: 100
  completedAfter: "PT24H"
  completionGracePeriod: "PT180S"
  cache:
    enabled: true
    maxSizeBytes: 0.5G
  producers:
    continueRecordingOnPromotion: false
    maxConcurrentRecordings: 10
    maxPromotableGeneration: 3
    maxSynchronizedGeneration: 2
    maxProfileSize: 0
  promotion:
    minProfileSize: 1M
    minProfileDuration: "PT2M"
    minProfileSizePerGeneration: "0:1M,1:10M,2:25M,3:50M"
    minProfileDurationPerGeneration: "0:PT2M,1:PT15M,2:PT30M,3:PT60M"
  cleaner:
    enabled: true
    externalPersistentStorageSoftLimit: "10Gi" # use with s3 or azure-blob storage services
    targetSize: 0 # use only to override auto-settings
    warningSize: 0 # use only to override auto-settings
    keepUnrequestedProfileNamesFor: 0
    keepDebugOnlyGenerationProfilesFor: "P7D"

codeCache:
  cleaner:
    enabled: true
    targetSize: 100Gi
    interval: PT2H
  storage:
    offloadReadOperations: true
    writeBehindStorageMethod: true

inventory:
  enabled: true
  cleaner:
    interval: PT7M

synchronization:
  enabled: true
  # comma separated list of URLs pointing to REST API of other peers,
  # e.g. https://rno.cluster1:8080/,https://rno.cluster2:8080/
  peers: ""
  initialDelay: "PT180s"
  period: "PT30s"

storage:
  blobStorageService:  # Required value. Available options: s3, azure-blob, gcp-blob
  pathPrefix: "%namespace%" # string %namespace% will be replaced by K8S namespace, it can be extended ("%namespace%/test1") or used without namespace ("test2")
  azureBlob:
    endpoint: https://<yourendpoint>.blob.core.windows.net
    authMethod: default-credentials # available options: sas-token, connection-string, default-credentials
    # K8s nodes that run cache, compilebroker and gateway PODs must have RW permissions to storage container below
    container: <your-container>
  gcpBlob:
    commonBucket: <your-bucket>
  s3:
    # K8s nodes that run cache, compilebroker and gateway PODs must have RW permissions to bucket below
    commonBucket: <your-bucket>
    region: "us-west-2"
    storageEndpoint: "" # override to set your s3 endpoint if using S3 compatible storage service
    credentialsType: "default" # available options: default, static
#################################################################################
# The rest of the settings are only to show you the values used internally.     #
# Changing the values below will not have any affect on your CNC cluster.       #
#################################################################################

gateway:
  replicas: 1
  autoscaler:
    enabled: true
    mode: operator
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  service:
    type: "NodePort"
    httpEndpoint:
      enabled: false
      port: 8080
    grpc:
      port: 50051
    # annotations: {}
  ports:
    serviceGrpcPort: 50051
    internalGrpcPort: 50052
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service
  existingServiceAccount: ""

gwProxy:
  enabled: true
  replicas: 1
  autoscaler:
    enabled: false
    mode: hpa
    min: 1
    max: 10
  resources:
    requests:
      cpu: "7"
      memory: "1Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "1Gi"
      ephemeral-storage: "1Gi"
  overloadManager:
    maxHeapSizePodRatio: "0.50" # "0.50" is 50% of gwProxy.resources.limits.memory
    maxHeapSizeBytes: "0" # if not "0", then this value is used instead of maxHeapSizePodRatio
  circuitBreakers:
    maxRequests: "3072"
    maxConnections: "3072"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service
  existingServiceAccount: ""

compileBroker:
  enabled: true
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  terminationGracePeriodSeconds: 60
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service
  existingServiceAccount: ""

cache:
  replicas: 1
  autoscaler:
    enabled: true
    mode: operator
    min: 2
    max: 2
  terminationGracePeriodSeconds: 300
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service
  existingServiceAccount: ""
  ports:
    internalGrpcPort: 50071

operator:
  scaleDownStabilizationWindow: 120S
  timeToClearOptimizationBacklog: 120s
  monitorPodCpuUsage: true
  sessionBalancing:
    enabled: true
    minGatewayCpuUsage: "0.0"
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels:
    #release: "stable"
  podTemplateLabels:
    #environment: "dev"
  existingServiceAccount: ""

mgmtGateway:
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "2"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "2"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
  service:
    type: "LoadBalancer"
    httpEndpoint:
      port: 8080
  nodeSelector:
    kubernetes.io/arch: amd64
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service
  existingServiceAccount: ""

test: false
