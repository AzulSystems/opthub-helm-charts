---
clusterName: "cluster.local"

autoscaler: true

# By default, this is points at the docker hub artifacts
registry:
  opthub: "azul"
  dockerhubMirror: ""

imagePullPolicy: "IfNotPresent"

simpleSizing:
  # Total number of vCores that will be allocated to the CNC service.
  # The sizing formula in the templates will allocate individual
  # CNC infrastructure components to best utilize given resources.
  # The default number is the amount of vCores necessary to start
  # one replica of each CNC component, so that the service is operational.
  vCores: 39
  # minVCores and maxVCores has the same formula as vCores, but applied
  # when autoscaling is enabled.
  minVCores: 39
  # Default max is to allocate 10 compile brokers.
  maxVCores: 113


  # Do not change these values unless you change the required CNC pod sizing.
  relationships:
    brokersPerGateway: 4
    brokersPerCache: 100

secrets:
  db:
    username: "username"
    password: "password"
  blobStorage:
    accesskey: <yourAccessKey>
    secretkey: <yourSecretKey>
  azure:
    blobStorage:
      # connectionString: "<connection-string>"  # For authMethod: connection-string, get connection-string on
      # Azure Portal > Storage accounts > {storage_account_name} > Access keys

      # sasToken: "<sas-token>"  # For authMethod: sas-token, Get sas-token on
      # Azure Portal > Storage accounts > {storage_account_name} > {blob_container} > Shared access tokens

deployment:
  serviceAccount:
    labels: {}
    annotations: {}

ssl:
  enabled: false
  value:
    cert: ""
    key: ""
  path:
    cert: "cert.pem"
    key: "key.pem"
  secretName: ""
  mtls:
    enabled: false
    truststore: "client-truststore.p12"
    password: "pass"

compilations:
  minVmVersionForCNCCompilation: ""
  concurrencyBoost: ""
  parallelism:
    # Maximum concurrent compilation limit per VM (VMs will not send more than this amount at the same time).
    limitPerVm: 500
    # Maximum amount of parallel compiler engine processes running at the same time per compile broker.
    limitPerCompileBroker: 30
    lookupParallelism: 120 # calculated as limitPerCompileBroker * 4

readyNowOrchestrator:
  debugInfoHistoryLength: 100
  completedAfter: "PT24H"
  completionGracePeriod: "PT180S"
  cache:
    enabled: true
    maxSizeBytes: 500000000
  producers:
    continueRecordingOnPromotion: false
    maxConcurrentRecordings: 10
    maxPromotableGeneration: 3
    maxSynchronizedGeneration: 2
    maxProfileSize: 0
  promotion:
    minProfileSize: 1000000
    minProfileDuration: "PT2M"
    minProfileSizePerGeneration: "0:1000000,1:10000000,2:25000000,3:50000000"
    minProfileDurationPerGeneration: "0:PT2M,1:PT15M,2:PT30M,3:PT60M"
  cleaner:
    enabled: true
    externalPersistentStorageSoftLimit: "10Gi" # use with s3 or azure-blob storage services
    targetSize: 0 # use only to override auto-settings
    warningSize: 0 # use only to override auto-settings
    keepUnrequestedProfileNamesFor: 0
    keepDebugOnlyGenerationProfilesFor: "P7D"

codeCache:
  cleaner:
    enabled: true
    targetSize: "107374182400" # "107374182400" - 100GiB. Use quotes for large numbers.
    interval: PT2H
  storageType: blobstore # use sqldb|blobstore
  storage:
    offloadReadOperations: true
    writeBehindStorageMethod: true

synchronization:
  enabled: true
  # comma separated list of URLs pointing to REST API of other peers,
  # e.g. https://rno.cluster1:8080/,https://rno.cluster2:8080/
  peers: ""
  initialDelay: "PT180s"
  period: "PT30s"

storage:
  blobStorageService: s3 # available options: s3, azure-blob, gcp-blob
  pathPrefix: "%namespace%" # string %namespace% will be replaced by K8S namespace, it can be extended ("%namespace%/test1") or used without namespace ("test2")
  azureBlob:
    endpoint: https://<yourendpoint>.blob.core.windows.net
    authMethod: default-credentials # available options: sas-token, connection-string, default-credentials
    # K8s nodes that run cache, compilebroker and gateway PODs must have RW permissions to storage container below
    container: <your-container>
  gcpBlob:
    commonBucket: <your-bucket>
  s3:
    # K8s nodes that run cache, compilebroker and gateway PODs must have RW permissions to bucket below
    commonBucket: <your-bucket>
    region: "us-west-2"
    storageEndpoint: "" # override to set your s3 endpoint if using S3 compatible storage service
    credentialsType: "default" # available options: default, static
#################################################################################
# The rest of the settings are only to show you the values used internally.     #
# Changing the values below will not have any affect on your CNC cluster.       #
#################################################################################

gateway:
  replicas: 1
  autoscaler:
    enabled: true
    mode: operator
    min: 1
    max: 10
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  service:
    type: "NodePort"
    httpEndpoint:
      enabled: false
      port: 8080
    grpc:
      port: 50051
    # annotations: {}
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

gwProxy:
  enabled: true
  replicas: 1
  autoscaler:
    enabled: false
    mode: hpa
    min: 1
    max: 10
  resources:
    requests:
      cpu: "7"
      memory: "1Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "1Gi"
      ephemeral-storage: "1Gi"
  overloadManager:
    maxHeapSizePodRatio: "0.50" # "0.50" is 50% of gwProxy.resources.limits.memory
    maxHeapSizeBytes: "0" # if not "0", then this value is used instead of maxHeapSizePodRatio
  circuitBreakers:
    maxRequests: "3072"
    maxConnections: "3072"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

compileBroker:
  enabled: true
  replicas: 1
  autoscaler:
    enabled: true
    min: 1
    max: 10
  terminationGracePeriodSeconds: 60
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "8Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

cache:
  replicas: 1
  autoscaler:
    enabled: true
    mode: operator
    min: 2
    max: 2
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

db:
  enabled: false
  version: "11.4.3"
  replicas: 1
  schemaRecreateRegularCheck: false
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "200Gi"
    limits:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "7"
      memory: "28Gi"
      ephemeral-storage: "200Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  # when using persistent data volume make sure to lower ephemeral-storage allocation
  persistentDataVolume:
    enabled: false
    size: "200Gi"
    storageClassName: "" # empty string uses default storage class
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

operator:
  scaleDownStabilizationWindow: 120S
  timeToClearOptimizationBacklog: 120s
  monitorPodCpuUsage: true
  sessionBalancing:
    enabled: true
    minGatewayCpuUsage: "0.0"
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations: {}
  affinity: {}
  applicationLabels:
    #release: "stable"
  podTemplateLabels:
    #environment: "dev"

mgmtGateway:
  enabled: false
  resources:
    requests:
      # Do not use non-numerical values such as 200m, otherwise the templating logic will break.
      cpu: "2"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
    limits:
      cpu: "2"
      memory: "2Gi"
      ephemeral-storage: "1Gi"
  service:
    type: "LoadBalancer"
    httpEndpoint:
      port: 8080
  nodeSelector:
    kubernetes.io/arch: amd64
  applicationLabels: # Additional labels for Deployment/StatefulSet
    #release: "stable"
  podTemplateLabels: # Additional labels for POD
    #environment: "dev"
  serviceLabels: # Additional labels for Service

test: false
