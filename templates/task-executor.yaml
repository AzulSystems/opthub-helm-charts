{{- include "validateRequiredValues" . }}

{{- if ((.Values.taskExecutor).enabled) }}

{{- if and (eq "" .Values.deployment.serviceAccount.existingServiceAccount) (eq "" .Values.taskExecutor.existingServiceAccount)}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "taskExecutor.serviceAccount" . }}
  namespace: {{ .Release.Namespace }}
    {{- with .Values.deployment.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-executor
  namespace: {{ .Release.Namespace }}
  labels:
    app: task-executor
    {{- if .Values.taskExecutor.applicationLabels }}
    {{- .Values.taskExecutor.applicationLabels | toYaml | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task-executor
  template:
    metadata:
      labels:
        app: task-executor
        {{- if .Values.taskExecutor.podTemplateLabels }}
        {{- .Values.taskExecutor.podTemplateLabels | toYaml | nindent 8 }}
        {{- end }}
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/q/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 1001
      {{- if .Values.taskExecutor.spec }}
      {{- .Values.taskExecutor.spec | toYaml | nindent 6 }}
      {{- end }}
      containers:
        - name: task-executor
          image: {{ .Values.registry.opthub }}/opthub-task-executor:{{ default .Chart.AppVersion .Values.appVersionOverride }}{{ .Values.taskExecutor.versionSuffix }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          {{- if .Values.taskExecutor.command }}
          command: {{- .Values.taskExecutor.command | toYaml | nindent 8 }}
          {{- end }}
          env:
  {{- if eq "s3" .Values.storage.blobStorageService }}
            - name: BLOB_STORAGE_STORAGE_SERVICE
              value: s3
  {{- if eq "static" .Values.storage.s3.credentialsType }}
            - name: QUARKUS_S3_CLOUD_CREDENTIALS_STATIC_PROVIDER_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "blobStorage.s3.secretName" . }}
                  key: {{ .Values.secrets.blobStorage.s3.accessKeySecretKey }}
            - name: QUARKUS_S3_CLOUD_CREDENTIALS_STATIC_PROVIDER_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "blobStorage.s3.secretName" . }}
                  key: {{ .Values.secrets.blobStorage.s3.secretAccessKeySecretKey }}
            - name: QUARKUS_S3_CLOUD_CREDENTIALS_TYPE
              value: static
  {{- end }}
            - name: QUARKUS_S3_CLOUD_REGION
              value: {{ .Values.storage.s3.region }}
            - name: TASKEXECUTOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.s3.commonBucket }}
            - name: TASKEXECUTOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}task-executor/
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.s3.commonBucket }}
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}persistent-profile/
  {{- else if eq "gcp-blob" .Values.storage.blobStorageService }}
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.gcpBlob.commonBucket }}
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}persistent-profile/
            - name: BLOB_STORAGE_STORAGE_SERVICE
              value: gcp-blob
            - name: TASKEXECUTOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.gcpBlob.commonBucket }}
            - name: TASKEXECUTOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}task-executor/
  {{- else if eq "azure-blob" .Values.storage.blobStorageService }}
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.azureBlob.container }}
            - name: READYNOWORCHESTRATOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}persistent-profile/
            - name: BLOB_STORAGE_STORAGE_SERVICE
              value: azure-blob
            - name: BLOB_STORAGE_AZURE_BLOB_ENDPOINT
              value: {{ .Values.storage.azureBlob.endpoint }}
            - name: BLOB_STORAGE_AZURE_BLOB_AUTHMETHOD
              value: {{ .Values.storage.azureBlob.authMethod }}
  {{- if and (eq "sas-token" .Values.storage.azureBlob.authMethod) .Values.secrets.blobStorage.azure.sasToken }}
            - name: BLOB_STORAGE_AZURE_BLOB_SASTOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.storage.secretName" . }}
                  key: {{ .Values.secrets.blobStorage.azure.sasTokenSecretKey }}
  {{- end  }}
  {{- if and (eq "connection-string" .Values.storage.azureBlob.authMethod) .Values.secrets.blobStorage.azure.connectionString }}
            - name: BLOB_STORAGE_AZURE_BLOB_CONNECTIONSTRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.storage.secretName" . }}
                  key: {{ .Values.secrets.blobStorage.azure.connectionStringSecretKey }}
  {{- end  }}
            - name: TASKEXECUTOR_STORAGE_LOCATION_BUCKET
              value: {{ .Values.storage.azureBlob.container }}
            - name: TASKEXECUTOR_STORAGE_LOCATION_PATH_PREFIX
              value: {{ include "storageLocationPathPrefixWithNamespace" . }}task-executor/
  {{- end  }}
          args:
            - "-XX:+ExitOnOutOfMemoryError"
            - "-XX:MaxRAMPercentage=60"
            - "-XX:-OmitStackTraceInFastThrow"
{{- if .Values.storage.s3.storageEndpoint }}
            - "-Dquarkus.s3.endpoint-override={{ .Values.storage.s3.storageEndpoint }}"
{{- end  }}
            - "-Dquarkus.hazelcast-client.cluster-members=cache:5701"
{{- if .Values.taskExecutor.extraArguments }}
        {{- .Values.taskExecutor.extraArguments | toYaml | nindent 8 }}
{{- end }}
{{- if .Values.taskExecutor.extraArgumentsMap }}
    {{- range $key, $val := .Values.taskExecutor.extraArgumentsMap }}
        - -D{{ $key }}={{ $val }}
    {{- end }}
{{- end }}
          ports:
            - containerPort: 8080
              name: http-endpoint
{{- if .Values.taskExecutor.resources }}
          resources: {{- .Values.taskExecutor.resources | toYaml | nindent 10 }}
{{- end }}
{{- if ne true .Values.taskExecutor.disableKubernetesProbes }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http-endpoint
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: http-endpoint
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /q/health/started
              port: http-endpoint
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 5
            failureThreshold: 18
{{- end }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: tmp-volume
          emptyDir:
{{- if (((.Values.taskExecutor).resources).limits) }}
            sizeLimit: {{ get .Values.taskExecutor.resources.limits "ephemeral-storage" }}
{{- end }}
      serviceAccountName: {{ include "taskExecutor.serviceAccount" . }}
{{- if eq true .Values.taskExecutor.azureVirtualNodes }}
      nodeSelector:
        kubernetes.io/role: agent
        kubernetes.io/os: linux
        type: virtual-kubelet
{{- else if .Values.taskExecutor.nodeSelector }}
      nodeSelector: {{- .Values.taskExecutor.nodeSelector | toYaml | nindent 8 }}
{{- end }}
{{- if eq true .Values.taskExecutor.azureVirtualNodes }}
      tolerations:
        - key: virtual-kubelet.io/provider
          operator: Exists
        - key: azure.com/aci
          effect: NoSchedule
{{- else if .Values.taskExecutor.tolerations }}
      tolerations: {{- .Values.taskExecutor.tolerations | toYaml | nindent 8 }}
  {{- end }}
{{- if and ( ne true .Values.taskExecutor.azureVirtualNodes ) .Values.taskExecutor.affinity }}
      affinity: {{- .Values.taskExecutor.affinity | toYaml | nindent 8 }}
{{- end }}

{{- end}}